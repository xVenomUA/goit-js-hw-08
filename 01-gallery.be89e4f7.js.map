{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","node_modules/simplelightbox/dist/simple-lightbox.esm.js","src/js/01-gallery.js","src/js/gallery-items.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.com\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.14.2\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        captionHTML: true,\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5,\n        download: false\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    this.close();\n                    return;\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    getCaptionElement(elem) {\n        // look at sibling selector\n        if( this.options.captionSelector.startsWith('+')) {\n            let selector = this.options.captionSelector.replace(/^\\+/, '').trimStart();\n            let sibling = elem.nextElementSibling;\n            if(sibling && sibling.matches(selector)) {\n                return sibling;\n            }\n            return false;\n        }\n        else if( this.options.captionSelector.startsWith('>') ) {\n            let selector = this.options.captionSelector.replace(/^>/, '').trimStart();\n            return elem.querySelector(selector);\n        }\n        else {\n            return elem.querySelector(this.options.captionSelector);\n        }\n    }\n\n    generateQuerySelector(elem) {\n        const {\n            tagName,\n            id,\n            className,\n            parentNode\n        } = elem;\n\n        if (tagName === 'HTML') return 'HTML';\n\n        let str = tagName;\n\n        str += (id !== '') ? `#${id}` : '';\n\n        if (className) {\n            const classes = className.trim().split(/\\s/);\n            for (let i = 0; i < classes.length; i++) {\n                str += `.${classes[i]}`;\n            }\n        }\n\n        let childIndex = 1;\n\n        for (let e = elem; e.previousElementSibling; e = e.previousElementSibling) {\n            childIndex += 1;\n        }\n\n        str += `:nth-child(${childIndex})`;\n\n        return `${this.generateQuerySelector(parentNode)} > ${str}`;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.download = document.createElement('div');\n        this.domNodes.download.classList.add('sl-download');\n\n        this.domNodes.downloadLink = document.createElement('a');\n        this.domNodes.downloadLink.setAttribute('download', '');\n        this.domNodes.downloadLink.textContent = this.options.download;\n\n        this.domNodes.download.appendChild(this.domNodes.downloadLink);\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            let captionClasses = this.options.captionClass.split(/[\\s,]+/);\n            this.domNodes.caption.classList.add(...captionClasses);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || (element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')($|\\\\?.*$)', 'i').test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    getScrollbarWidth() {\n        let scrollbarWidth = 0;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.classList.add('sl-scrollbar-measure');\n\n        document.body.appendChild(scrollDiv);\n        scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let paddingRight = parseInt(window.getComputedStyle(document.body).paddingRight || 0, 10);\n                scrollbarWidth = this.getScrollbarWidth();\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight + 'px';\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            if(this.options.overlay) {\n                document.body.removeChild(this.domNodes.overlay);\n            }\n            this.domNodes.additionalHtml = null;\n            this.domNodes.download = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    if(!this.currentImage) return;\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self'\n                    ? this.relatedElements[this.currentImageIndex]\n                    : this.getCaptionElement(this.relatedElements[this.currentImageIndex]);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n            if (this.options.download) {\n                this.domNodes.downloadLink.setAttribute('href', this.currentImage.getAttribute('src'));\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                // event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth, allowHTML) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n\n            const property = (allowHTML ?? this.options.captionHTML) ?? true ? 'innerHTML' : 'innerText';\n\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption[property] = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        this.globalScrollbarWidth = this.getScrollbarWidth();\n        if (this.options.disableScroll) {\n            this.toggleScrollbar('hide');\n            this.globalScrollbarWidth = 0;\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        if (this.options.download && this.domNodes.download) {\n            this.domNodes.wrapper.appendChild(this.domNodes.download);\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton, this.domNodes.download], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element) {\n                element.style.opacity = 0;\n                element.style.display = display || \"block\";\n            }\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = currentOpacity;\n                        }\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = opacityTarget;\n                        }\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem, position = 0) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        if(position > 0) {\n            elem = this.elements[position];\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    openPosition(position) {\n        let elem = this.elements[position];\n        this.open(elem, position)\n    }\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;\n","import { galleryItems } from './gallery-items.js';\nimport SimpleLightbox from 'simplelightbox/dist/simple-lightbox.esm';\n// Change code below this line\nconst list = document.querySelector('.gallery');\nconst markup = galleryItems.map(\n  ({ preview, description, original }) =>\n    `<li class=\"gallery__item\">\n  <a class=\"gallery__link\" href=\"${original}\">\n    <img\n      class=\"gallery__image\"\n      src=\"${preview}\"\n      alt=\"${description}\"\n    />\n  </a>\n</li>`\n);\n///~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nlist.insertAdjacentHTML('beforeend', markup.join(''));\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n","export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820__480.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$945867cc3302d81d$var$SimpleLightbox","opts","get","supportsPassive","window","addEventListener","removeEventListener","e","elem","this","options","captionSelector","startsWith","selector","replace","trimStart","sibling","nextElementSibling","matches","querySelector","tagName","id","className","parentNode","str","classes","trim","split","i","length","childIndex","previousElementSibling","generateQuerySelector","domNodes","overlay","document","createElement","classList","add","dataset","opacityTarget","overlayOpacity","closeButton","innerHTML","closeText","spinner","navigation","navText","counter","download","downloadLink","setAttribute","textContent","appendChild","caption","captionPosition","captionClass","captionClasses","image","wrapper","rtl","limit","inThrottle","func","apply","arguments","setTimeout","element","fileExt","getAttribute","sourceAttr","RegExp","test","s","body","documentElement","style","scrollbarWidth","scrollDiv","offsetWidth","clientWidth","removeChild","type","slice","call","querySelectorAll","fixedClass","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","isAppleDevice","paddingRight","parseInt","getComputedStyle","getScrollbarWidth","originalPaddingRight","forEach","actualPadding","calculatedPadding","parseFloat","remove","fixedElements","padding","isOpen","isAnimating","isClosing","relatedElements","currentImageIndex","dispatchEvent","Event","history","historyHasChanges","hashReseted","resetHash","eventNamespace","fadeOut","fadeSpeed","disableScroll","toggleScrollbar","htmlClass","additionalHtml","currentImage","controlCoordinates","mousedown","zoomed","capture","initialScale","minMax","maxZoom","doubleTapped","hash","location","substring","index","next","prev","nextImage","Image","prevImage","event","src","target","loadedImages","indexOf","push","direction","slideDirection","newIndex","loop","animationSlide","slide","animationSpeed","swipeDiff","show","contains","adjustImage","preloading","preload","tmpImage","windowWidth","widthRatio","windowHeight","innerHeight","heightRatio","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","initialImageIndex","close","alertError","alert","alertErrorMessage","loadImage","updateURL","captionText","imageWidth","width","imageHeight","height","scaleImageToRatio","ratio","top","globalScrollbarWidth","focus","forceFocus","fadeIn","captionContainer","getCaptionElement","captions","captionType","captionsData","hide","setCaption","targetOffsetX","targetOffsetY","targetScale","transitionPrefix","min","max","setZoomData","initialLocationHash","bind","hashchangeHandler","getElementsByTagName","currentTarget","match","preventDefault","scrollZoom","containerHeight","getDimensions","containerWidth","imgHeight","imgWidth","containerOffsetX","offsetLeft","containerOffsetY","offsetTop","initialOffsetX","initialOffsetY","delta","wheelDelta","undefined","detail","scrollZoomFactor","scrollTopPos","scrollTop","pinchOffsetX","pageX","pinchOffsetY","pageY","limitOffsetX","limitOffsetY","scaleDifference","opacity","initialPinchDistance","targetPinchDistance","initialPointerOffsetX","clientX","initialPointerOffsetY","clientY","touchCount","touches","doubleTapZoom","initialPointerOffsetX2","initialPointerOffsetY2","sqrt","transitionCapable","imageLeft","swipeYDiff","swipeStart","swipeYStart","pointerOffsetX","pointerOffsetY","touchmoveCount","pointerOffsetX2","pointerOffsetY2","swipeEnd","swipeYEnd","possibleDir","swipeTolerance","swipeClose","isTouchDevice","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","newHash","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","historyUpdateTimeout","clearTimeout","updateHash","allowHTML","ref","property","captionHTML","captionDelay","speed","pos","rel","elems","Array","from","elements","filter","getRelated","showCounter","targetURL","events","callback","wrap","namespaces","isPassiveEventsSupported","passive","duration","element1","getPropertyValue","fade","currentOpacity","step","requestAnimationFrame","element2","isFadeIn","initialDisplay","input","Symbol","iterator","fullyNamespacedEvents","position","jQuery","openImage","open","off","initialSelector","destroy","constructor","$parcel$interopDefault","nav","enableKeyboard","docClose","disableRightClick","throttleInterval","uniqueImages","navigator","platform","assign","defaultOptions","checkPassiveEventsSupport","calculateTransitionPrefix","imgArr","createDomNodes","isValidLink","parentElement","throttle","$97d4a16aabe2244a$var$list","$97d4a16aabe2244a$var$markup","preview","original","description","map","insertAdjacentHTML","join","$945867cc3302d81d$export$2e2bcd8739ae039"],"version":3,"file":"01-gallery.be89e4f7.js.map"}